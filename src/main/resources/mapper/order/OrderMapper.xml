<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.plateer.ec1.order.mapper.OrderMapper">
    <select id="getOrdNo" resultType="java.lang.String" flushCache="true" useCache="false">
        select concat('C', to_char(now(), 'YYYYMMDD'), nextval('nextval_ord_no'))
    </select>

    <select id="getBnfNo" resultType="java.lang.String" flushCache="true" useCache="false">
        select concat('B', nextval('nextval_bnf_no'))
    </select>

    <resultMap id="orderProductViewMap" type="orderProductView">
        <association property="orderProductVO" autoMapping="true" columnPrefix="op_"/>
        <association property="productInfoVO" autoMapping="true" />
    </resultMap>

    <select id="getOrderProductView" resultMap="orderProductViewMap">
        with ord_prd as (
            <foreach collection="orderProductVOList" item="ordPrd" separator="union all">
                select
                    #{ordPrd.ordCnt, jdbcType=INTEGER} as ord_cnt
                    , #{ordPrd.goodsNo, jdbcType=VARCHAR} as goods_no
                    , #{ordPrd.itemNo, jdbcType=VARCHAR} as item_no
                    , #{ordPrd.goodsNm, jdbcType=VARCHAR} as goods_nm
                    , #{ordPrd.itemNm, jdbcType=VARCHAR} as item_nm
            </foreach>
        )
        select
            op.ord_cnt as op_ord_cnt
             , op.goods_no as op_goods_no
             , op.item_no as op_item_no
             , op.goods_nm as op_goods_nm
             , op.item_nm as op_item_nm
             , gd.goods_no
             , gd.goods_nm
             , gd.goods_tp_cd
             , gd.sale_prc
             , gd.prm_prc
             , gd.prgs_stat_cd
             , gd.goods_dlv_tp_cd
             , itm.item_no
             , itm.item_nm
        from ord_prd op left join pr_goods_base gd on op.goods_no = gd.goods_no
                        left join pr_item_info itm on gd.goods_no = itm.goods_no and op.item_no = itm.item_no
    </select>

    <sql id="sql_ord_amt_sum">
        select ord_no,
               sum(case
                       when ord_clm_tp_cd = 'O' or ord_clm_tp_cd = 'RC' then (ord_amt * ord_cnt)
                       else - (ord_amt * ord_cnt)
                   end)
        from op_clm_info
        where ord_no = #{ordNo}
        group by ord_no
    </sql>

    <sql id="sql_cst_amt_sum">
        select ord_no, sum(
                case when dv_amt_tp_cd = '10' and aply_ccd = '10' then aply_dv_amt
                     when dv_amt_tp_cd = '10' and aply_ccd = '20' then -aply_dv_amt
                     when (dv_amt_tp_cd = '20' or dv_amt_tp_cd ='30') and aply_ccd = '10' then aply_dv_amt
                     else -aply_dv_amt
                    end
            )
        from op_ord_cost_info
        where ord_no = #{ordNo}
        group by ord_no
    </sql>

    <sql id="sql_bnf_amt_sum">
        select ord_no,
               sum(case aply_cncl_ccd
                       when '10' then -aply_amt
                       else aply_amt end
                   )
        from op_ord_bnf_rel_info
        where ord_no = #{ordNo}
        group by ord_no
    </sql>

    <sql id="sql_amt_info">
        with ord_sum as(
        <include refid="com.plateer.ec1.order.mapper.OrderMapper.sql_ord_amt_sum" />
        ),cst_sum as(
        <include refid="com.plateer.ec1.order.mapper.OrderMapper.sql_cst_amt_sum" />
        ), bnf_sum as(
        <include refid="com.plateer.ec1.order.mapper.OrderMapper.sql_bnf_amt_sum"/>
        )
    </sql>

    <select id="validateAmount"  resultType="java.lang.Boolean">
        <include refid="sql_amt_info"  />
        , pay as (
            select ord_no
                 , coalesce(sum(pay_amt),0) as pay_sum
            from op_pay_info
            where pay_ccd = '10'
              and ( pay_prgs_scd = '10' or pay_prgs_scd = '20')
              and ord_no = #{ordNo}
            group by ord_no
        )
        select
            pay_sum = ord_sum.sum + coalesce(bnf_sum.sum, 0) + coalesce(cst_sum.sum, 0)
        from pay inner join ord_sum on pay.ord_no = ord_sum.ord_no
                 left join cst_sum on ord_sum.ord_no = cst_sum.ord_no
                 left join bnf_sum on cst_sum.ord_no = bnf_sum.ord_no
    </select>

</mapper>